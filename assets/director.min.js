  <script type="text/javascript">

// parseUri 1.2.2
// (c) Steven Levithan <stevenlevithan.com>
// MIT License

    function parseUri (str) {
      var o   = parseUri.options,
        m   = o.parser[o.strictMode ? "strict" : "loose"].exec(str),
        uri = {},
        i   = 14;

      while (i--) uri[o.key[i]] = m[i] || "";

      uri[o.q.name] = {};
      uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {
        if ($1) uri[o.q.name][$1] = $2;
      });

      return uri;
    };

    parseUri.options = {
      strictMode: false,
      key: ["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"],
      q:   {
        name:   "queryKey",
        parser: /(?:^|&)([^&=]*)=?([^&]*)/g
      },
      parser: {
        strict: /^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/,
        loose:  /^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/
      }
    };


    bioliteRedirects = {}

    bioliteRedirects.routing = 
    {
      routes : {
        '/blogs/team' : '/page/team',
        '/blogs/lab' : '/pages/lab'
      },

      init : function()
      {
        //
      },

      doRouting : function()
      {
        // $.each(this.routes, function(index, val) {
        //    console.log( 'route', index, val)
        // });
      var location = window.location.href;

      console.log( 'location', location, this.routes, parseUri(location))
        
        
      },

      redirect : function(url)   
      {
        console.log('%cEVENT', 'color:#3d8627', '- route ', url)
      }
    }

    bioliteRedirects.routing.doRouting()

  </script>
